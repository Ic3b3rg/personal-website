---
import { useTranslations } from "../../i18n/utils";
import { GITHUB_USERNAME } from "../../lib/constants";
import type { GithubEvent } from "../../types/githubEvent";
import Card from "../Card/index.astro";
import GitHubTimeline from "./GithubTimeline";

const t = useTranslations(Astro.url);

const githubEvents = await fetch(
  `https://api.github.com/users/${GITHUB_USERNAME}/events`,
).then((res) => res.json() as Promise<GithubEvent[]>);

const groupedEventsForDate = githubEvents.reduce(
  (acc, event) => {
    const date = new Date(event.created_at).toISOString().split("T")[0];
    if (!acc[date]) {
      acc[date] = [];
    }
    acc[date].push(event);
    return acc;
  },
  {} as Record<string, GithubEvent[]>,
);
console.log(githubEvents);
---

<Card
  colSpan="lg:col-span-2"
  rowSpan="md:row-span-2"
  title={t("home.lastActivities")}
>
  <GitHubTimeline client:load events={groupedEventsForDate} />
</Card>
