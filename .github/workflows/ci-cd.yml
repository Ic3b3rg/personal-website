name: Build & Deploy Astro Portfolio

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache API data hash
        id: restore-hash
        uses: actions/cache@v4
        with:
          path: .last_data_hash
          key: api-hash-${{ runner.os }}

      - name: Fetch API data & check hash
        id: check
        run: |
          echo "ðŸ“¡ Fetching GitHub API data..."
          curl -s https://api.github.com/users/Ic3b3rg/events > data.json

          NEW_HASH=$(sha256sum data.json | awk '{ print $1 }')
          OLD_HASH=$(cat .last_data_hash 2>/dev/null || echo "none")

          echo "NEW_HASH=$NEW_HASH" >> $GITHUB_ENV
          echo "OLD_HASH=$OLD_HASH" >> $GITHUB_ENV

          if [[ "$GITHUB_EVENT_NAME" == "schedule" && "$NEW_HASH" == "$OLD_HASH" ]]; then
            echo "API unchanged (cron run). Skipping build." >> $GITHUB_STEP_SUMMARY
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "API changed or push event. Proceeding with build."
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "$NEW_HASH" > .last_data_hash
          fi

      - name: Install dependencies
        if: steps.check.outputs.should_build == 'true'
        run: npm ci

      - name: Build project
        if: steps.check.outputs.should_build == 'true'
        run: npm run build

      - name: Deploy to VPS (via SCP)
        if: steps.check.outputs.should_build == 'true'
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "dist/"
          target: "/var/www/personal-website"
          overwrite: true
          debug: true

      - name: Reload nginx on VPS
        if: steps.check.outputs.should_build == 'true'
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: sudo systemctl reload nginx
